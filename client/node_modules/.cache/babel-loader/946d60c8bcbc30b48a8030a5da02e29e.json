{"ast":null,"code":"import _regeneratorRuntime from \"/home/pedro/Documents/MERN/client/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/pedro/Documents/MERN/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/pedro/Documents/MERN/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/pedro/Documents/MERN/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pedro/Documents/MERN/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pedro/Documents/MERN/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pedro/Documents/MERN/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pedro/Documents/MERN/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/pedro/Documents/MERN/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/pedro/Documents/MERN/client/src/App.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation ($id: ID!){\\n    removerTodo(id: $id)\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation ($id: ID!, $complete: Boolean){\\n    updateTodo(id: $id, complete: $complete)\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n  todos{\\n    id\\n    text\\n    complete\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { graphql, compose } from 'react-apollo';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClosetIcon from '@material-ui/icons/Close';\nimport Form from '/form';\nvar TodosQuery = gql(_templateObject());\nvar UpdateMutation = gql(_templateObject2());\nvar RemoveMutation = gql(_templateObject3());\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.updateTodo =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(todo) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.props.updateTodo({\n                  variables: {\n                    id: todo.id,\n                    complete: !todo.complete\n                  },\n                  update: function update(store) {\n                    var data = store.readQuery({\n                      query: TodosQuery\n                    });\n                    data.todos = data.todos.map(function (x) {\n                      return x.id === todo.id ? _objectSpread({}, todo, {\n                        complete: !todo.complete\n                      }) : x;\n                    });\n                    store.writeQuery({\n                      query: TodosQuery,\n                      data: data\n                    });\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.removeTodo =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(todo) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this.props.removerTodo({\n                  variables: {\n                    id: todo.id\n                  },\n                  update: function update(store) {\n                    var data = store.readQuery({\n                      query: TodosQuery\n                    });\n                    data.todos = data.todos.filter(function (x) {\n                      return x.id !== todo.id;\n                    });\n                    store.writeQuery({\n                      query: TodosQuery,\n                      data: data\n                    });\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.createTodo = function (text) {};\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$data = this.props.data,\n          loading = _this$props$data.loading,\n          todos = _this$props$data.todos;\n\n      if (loading) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          margin: \"auto\",\n          width: 400\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        eleveation: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Form, {\n        submit: this.createTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, todos.map(function (todo) {\n        return React.createElement(ListItem, {\n          key: todo.id,\n          role: undefined,\n          dense: true,\n          button: true,\n          onClick: _this2.updateTodo(todo),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: todo.complete,\n          tabIndex: -1,\n          disableRipple: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          primary: todo.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }), React.createElement(ListItemSecondaryAction, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          onClick: function onClick() {\n            return _this2.removeTodo(todo);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(ClosetIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }))));\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default compose(graphql(TodosQuery), graphq(RemoveMutation, {\n  name: \"removerTodo\"\n}), graphql(UpdateMutation, {\n  name: \"updateTodo\"\n}))(App);","map":{"version":3,"sources":["/home/pedro/Documents/MERN/client/src/App.js"],"names":["React","Component","gql","graphql","compose","Paper","List","ListItem","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","ClosetIcon","Form","TodosQuery","UpdateMutation","RemoveMutation","App","updateTodo","todo","props","variables","id","complete","update","store","data","readQuery","query","todos","map","x","writeQuery","removeTodo","removerTodo","filter","createTodo","text","loading","display","margin","width","undefined","graphq","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAA+B,cAA/B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,OAAjB;AAEA,IAAMC,UAAU,GAAGZ,GAAH,mBAAhB;AASA,IAAMa,cAAc,GAAGb,GAAH,oBAApB;AAKA,IAAMc,cAAc,GAAGd,GAAH,oBAApB;;IAMMe,G;;;;;;;;;;;;;;;;;;UACJC,U;;;;;+BAAa,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACL,MAAKC,KAAL,CAAWF,UAAX,CAAsB;AAC1BG,kBAAAA,SAAS,EAAE;AACTC,oBAAAA,EAAE,EAAEH,IAAI,CAACG,EADA;AAETC,oBAAAA,QAAQ,EAAE,CAACJ,IAAI,CAACI;AAFP,mBADe;AAK1BC,kBAAAA,MAAM,EAAE,gBAAAC,KAAK,EAAI;AACf,wBAAMC,IAAI,GAAGD,KAAK,CAACE,SAAN,CAAgB;AAAEC,sBAAAA,KAAK,EAAEd;AAAT,qBAAhB,CAAb;AACAY,oBAAAA,IAAI,CAACG,KAAL,GAAaH,IAAI,CAACG,KAAL,CAAWC,GAAX,CACX,UAAAC,CAAC;AAAA,6BACDA,CAAC,CAACT,EAAF,KAASH,IAAI,CAACG,EAAd,qBAEOH,IAFP;AAGII,wBAAAA,QAAQ,EAAE,CAACJ,IAAI,CAACI;AAHpB,2BAKEQ,CAND;AAAA,qBADU,CAAb;AASAN,oBAAAA,KAAK,CAACO,UAAN,CAAiB;AAACJ,sBAAAA,KAAK,EAAEd,UAAR;AAAoBY,sBAAAA,IAAI,EAAJA;AAApB,qBAAjB;AACD;AAjByB,iBAAtB,CADK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;UAuBbO,U;;;;;+BAAa,kBAAMd,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACL,MAAKC,KAAL,CAAWc,WAAX,CAAuB;AAC3Bb,kBAAAA,SAAS,EAAE;AACTC,oBAAAA,EAAE,EAAEH,IAAI,CAACG;AADA,mBADgB;AAI3BE,kBAAAA,MAAM,EAAE,gBAAAC,KAAK,EAAI;AACf,wBAAMC,IAAI,GAAGD,KAAK,CAACE,SAAN,CAAgB;AAAEC,sBAAAA,KAAK,EAAEd;AAAT,qBAAhB,CAAb;AACAY,oBAAAA,IAAI,CAACG,KAAL,GAAaH,IAAI,CAACG,KAAL,CAAWM,MAAX,CAAmB,UAAAJ,CAAC;AAAA,6BAAIA,CAAC,CAACT,EAAF,KAASH,IAAI,CAACG,EAAlB;AAAA,qBAApB,CAAb;AACAG,oBAAAA,KAAK,CAACO,UAAN,CAAiB;AAACJ,sBAAAA,KAAK,EAAEd,UAAR;AAAoBY,sBAAAA,IAAI,EAAJA;AAApB,qBAAjB;AACD;AAR0B,iBAAvB,CADK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;UAcbU,U,GAAa,UAACC,IAAD,EAAU,CAEtB,C;;;;;;;6BAEQ;AAAA;;AAAA,6BAC0B,KAAKjB,KAD/B,CACAM,IADA;AAAA,UACOY,OADP,oBACOA,OADP;AAAA,UACgBT,KADhB,oBACgBA,KADhB;;AAEP,UAAGS,OAAH,EAAW;AACT,eAAO,IAAP;AACD;;AACD,aACE;AAAK,QAAA,KAAK,EAAI;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAI;AAACC,UAAAA,MAAM,EAAE,MAAT;AAAiBC,UAAAA,KAAK,EAAE;AAAxB,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAO,QAAA,UAAU,EAAI,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,MAAM,EAAE,KAAKL,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCP,KAAK,CAACC,GAAN,CAAU,UAAAX,IAAI;AAAA,eACb,oBAAC,QAAD;AACA,UAAA,GAAG,EAAEA,IAAI,CAACG,EADV;AAEA,UAAA,IAAI,EAAEoB,SAFN;AAGA,UAAA,KAAK,MAHL;AAGM,UAAA,MAAM,MAHZ;AAIA,UAAA,OAAO,EAAE,MAAI,CAACxB,UAAL,CAAgBC,IAAhB,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME,oBAAC,QAAD;AACE,UAAA,OAAO,EAAEA,IAAI,CAACI,QADhB;AAEE,UAAA,QAAQ,EAAE,CAAC,CAFb;AAGE,UAAA,aAAa,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,EAWE,oBAAC,YAAD;AAAc,UAAA,OAAO,EAAEJ,IAAI,CAACkB,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXF,EAYE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,UAAD;AAAY,UAAA,OAAO,EAAG;AAAA,mBAAM,MAAI,CAACJ,UAAL,CAAgBd,IAAhB,CAAN;AAAA,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CAZF,CADa;AAAA,OAAd,CADD,CAFA,CADA,CADF,CADF;AA+BD;;;;EA9EelB,S;;AAiFlB,eAAeG,OAAO,CAACD,OAAO,CAACW,UAAD,CAAR,EACC6B,MAAM,CAAC3B,cAAD,EAAiB;AAAC4B,EAAAA,IAAI,EAAE;AAAP,CAAjB,CADP,EAECzC,OAAO,CAACY,cAAD,EAAiB;AAAE6B,EAAAA,IAAI,EAAE;AAAR,CAAjB,CAFR,CAAP,CAEwD3B,GAFxD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport gql from 'graphql-tag'\nimport {graphql, compose} from 'react-apollo'\nimport Paper from '@material-ui/core/Paper'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClosetIcon from '@material-ui/icons/Close';\nimport Form from '/form'\n\nconst TodosQuery = gql`\n{\n  todos{\n    id\n    text\n    complete\n  }\n}\n`\nconst UpdateMutation = gql`\n  mutation ($id: ID!, $complete: Boolean){\n    updateTodo(id: $id, complete: $complete)\n  }\n`\nconst RemoveMutation = gql`\n  mutation ($id: ID!){\n    removerTodo(id: $id)\n  }\n`\n\nclass App extends Component {\n  updateTodo = async todo => {\n    await this.props.updateTodo({\n      variables: {\n        id: todo.id,\n        complete: !todo.complete\n      },\n      update: store => {\n        const data = store.readQuery({ query: TodosQuery})\n        data.todos = data.todos.map(\n          x => \n          x.id === todo.id \n          ? {\n              ...todo,\n              complete: !todo.complete\n          } \n          : x\n        )\n        store.writeQuery({query: TodosQuery, data})\n      }\n        \n    })\n  }\n\n  removeTodo = async todo => {\n    await this.props.removerTodo({\n      variables: {\n        id: todo.id,\n      },\n      update: store => {\n        const data = store.readQuery({ query: TodosQuery})\n        data.todos = data.todos.filter( x => x.id !== todo.id)\n        store.writeQuery({query: TodosQuery, data})\n      }\n        \n    })\n  }\n\n  createTodo = (text) => {\n    \n  }\n  \n  render() {\n    const {data: {loading, todos}} = this.props\n    if(loading){\n      return null\n    }\n    return (\n      <div style = {{ display: 'flex'}}>\n        <div style = {{margin: \"auto\", width: 400}}>\n        <Paper eleveation = {1}>\n        <Form submit={this.createTodo}/>\n        <List>\n        {todos.map(todo => (\n          <ListItem \n          key={todo.id} \n          role={undefined} \n          dense button \n          onClick={this.updateTodo(todo)}\n          >\n            <Checkbox\n              checked={todo.complete}\n              tabIndex={-1}\n              disableRipple\n            />\n            <ListItemText primary={todo.text} />\n            <ListItemSecondaryAction>\n              <IconButton onClick={ () => this.removeTodo(todo)}>\n                <ClosetIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n        </Paper>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default compose(graphql(TodosQuery),\n                       graphq(RemoveMutation, {name: \"removerTodo\"}),\n                       graphql(UpdateMutation, { name: \"updateTodo\"}))(App);\n\n\n\n\n\n\n    \n"]},"metadata":{},"sourceType":"module"}